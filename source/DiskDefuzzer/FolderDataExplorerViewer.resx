<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDP8AkwABdQGEAY8BZgGAAY8BYAF5AYcBVwFuAXsBTgFiAW8BRAFWAWEBOQFI
        AVIBLgE6AUMBJQEuATUBGwEiASkBFAEZAR4BDgESARYBDgETARgJAAF1AYQBjwFsAXoBhQFgAW0BdwFR
        AV0BZgFCAUwBVAExAToBQQEjASoBMAEWARwBIQEOARMBGAEOARMBGAEOARMBGAEOARMBGAEOARMBGAEO
        ARMBGAEOARMBGGMAAXcBhwGSAYkBoQGrAWoBsgHUAQABjwHNAQABjwHNAQABjwHNAQQBjAHHAQgBiAG+
        AQ8BggG0ARUBfAGpARsBdwGfAR8BcgGWASIBSwFcAZsBrQG1BgABdwGHAZIBogHfAfABcAHNAeoBSQG4
        AeIBNwGuAdsBLQGpAdkBJgGhAdIBIQGYAccBIAGOAbwBHgGDAa4BGQF/AasBFQF8AakBGwF3AZ8BHwFy
        AZYBFgEcASFjAAF6AYoBlQF+Ab4B0wGKAaQBrgF+AdwB/wFfAc8B/wFVAcsB/wFMAcQB+gFBAbwB9QE3
        AbMB8AEuAaoB6wEkAaAB5QETAYwB1AEjAWcBgAFeAWkBbQYAAXoBigGVAaoB6AH2AZUB5QH8AYQB3wH7
        AXUB1gH6AWoB0AH3AV0BxgH0AVABvgHwAUEBtAHsATUBqgHoASsBpAHmASABmgHfARYBkAHXARsBdwGf
        ASABJwEtYwABfQGOAZgBeQHSAewBiwGkAa0BiQHCAc4BcQHYAf8BZQHTAf8BXAHOAf8BUQHJAf4BSQHB
        AfoBPwG5AfUBNAGwAe4BKQGoAekBEAGFAc0BIgFLAVsBsgHAAcYDAAF9AY4BmAGwAeoB9gGfAekB+wGS
        AeQB/AGBAd0B+wF1AdYB+gFoAc4B9wFdAcYB9AFNAbwB8AFBAbQB7AE1AaoB6AEqAaMB5gEdAZYB3AEV
        AXwBqQEtATQBO2MAAYABkQGcAYEB1wHvAX0BxQHgAYwBpgGwAYAB3QH+AWgB0wH/AWcB1AH/AWIB0QH/
        AVgBzQH/AU4BxwH8AUYBvgH3ATsBtgHyATEBrAHsASUBaQGBAXoBlQGhAwABgAGRAZwBtgHtAfgBqgHs
        AfsBmwHoAfsBjwHjAfwBgQHdAfsBcQHVAfkBaAHOAfcBWwHFAfQBTQG8AfABPQGyAewBMgGpAegBJAGe
        AeIBEAGCAbQBOwFDAUtjAAGDAZUBnwGJAdwB8QGMAeIB/wGNAagBsQGMAboBxwF0AdgB/wFnAdQB/wFn
        AdQB/wFnAdQB/wFfAdAB/wFUAc0B/wFLAcUB/AFBAbsB9wEuAaIB2wFRAWcBdAGyAcABxgGDAZUBnwG+
        AfAB+QGrAfAB9wGlAewB+wGYAecB+wGJAeEB/AF/Ad0B+wFxAdUB+QFlAc0B9wFYAcQB8wFLAbsB8AE9
        AbIB7AEsAaQB4wEMAYoBvwFJAVMBXGMAAYYBmgGjAZIB4QHyAZgB6AH9AYABxAHeAY4BpwGwAYEB3gH9
        AYQB4AH/AYQB4AH/AYQB4AH/AYQB4AH/AYEB3wH/AXsB3QH/AXQB2AH/AWsB1gH/AVYBqQHRAY8BmwGk
        AYYBmQGjAb4B8AH5AbYB7QH4AbAB7gH6AaQB6wH6AZUB5gH7AYkB4QH8AX0B3AH8AXEB1QH5AWUBzQH3
        AVgBxAHzAUkBuQHvATUBqQHnAQwBjwHHAVcBYwFrYwABiAGcAaUBmgHmAfMBnwHrAfsBmAHoAf4BiwGs
        AbkBiwGsAbkBigGqAbcBiAGmAbMBhgGjAa8BgwGfAaoBgQGaAaYBfwGVAaEBfAGRAZ0BegGOAZkBeQGL
        AZUBdwGIAZMBiQGcAaYBvgHwAfkBtgHtAfgBtgHtAfgBqwHwAfcBogHsAfoBlQHmAfsBiQHhAfwBfQHc
        AfwBbwHTAfoBYwHMAfcBVQHDAfMBSQG5Ae8BGQGZAc8BYwFwAXpjAAGLAaABqAGgAeoB9gGmAe4B+QGf
        AesB+wGYAegB/gF6AdoB/wFnAdQB/wFnAdQB/wFnAdQB/wFnAdQB/wFnAdQB/wFnAdQB/wF3AYgBkwkA
        AYsBoAGoAb4B8AH5Ab4B8AH5Ab4B8AH5Ab4B8AH5AbQB8gH4AaoB7AH7AaAB6QH7AZUB5QH8AYoB3wH8
        AX8B2AH7AXQB0gH4AWgBygH0AV0BwAHxAWMBcAF6YwABjgGiAasBpwHuAfYBqwHwAfcBpgHuAfkBnwHr
        AfsBmAHoAf0BcQHUAfsBiQGeAacBhgGZAaMBggGUAZ8BfgGQAZoBegGMAZcBdwGIAZMJAAGNAaEBqgGN
        AaEBqgGNAaEBqgGNAaEBqgGNAaEBqgGLAZ8BqAGJAZwBpgGJAZsBpgGHAZoBpAGGAZkBowGEAZYBoAGE
        AZYBoAGDAZUBoAGDAZUBoAF1AYQBj2MAAY8BpAGsAaAB0gHaAasB8AH3AasB8AH3AaYB7gH5AZ8B6wH7
        AY0BoQGqAdUB3AHgGAABjwGkAawBsgHkAewBtgHtAfgBtgHtAfgBqQHsAfYBkgHhAfMBjQGhAaoB1QHc
        AeB4AAHaAd4B4QGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrAHVAdwB4BsAAdoB3gHhAY8BpAGs
        AY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsAdUB3AHg/wD8AAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEB
        AQABAQUAAYAXAAP/AQAE/wQABP8FAAEHAQABAQUAAQMBAAEBBQABAwEAAQEFAAEBAQABAQUAAQEBAAEB
        BwABAQcAAQEHAAEBBQABBwEAAQEFAAEHAQABAQUAAf8BAAH/BAABAQH/AQEB/wQABP8EAAT/BAAL
</value>
  </data>
</root>